import java.io.*;
import java.util.*;

class P1596 {
    static int N, M;
    static boolean[][] rainData;
    static boolean[][] knownPuddles;
    public static void main(String[] args) throws IOException {
        BufferedReader bf = new BufferedReader(new InputStreamReader((System.in)));
        StringTokenizer st = new StringTokenizer(bf.readLine());
        N = Integer.parseInt(st.nextToken());
        M = Integer.parseInt(st.nextToken());

        rainData = new boolean[N][M];
        knownPuddles = new boolean[N][M];

        for (int i=0; i<N; i++){
            String line = bf.readLine();
            for (int j=0; j<M; j++){
                if (line.charAt(j)=='W'){
                    rainData[i][j] = true;
                }
              //  System.out.print(rainData[i][j]);
            }
         //   System.out.println();
        }

        int count =0;
        for (int i=0; i<N; i++){
            for (int j=0; j<M; j++){
                if (rainData[i][j]&&!knownPuddles[i][j]){
                    count++;
                    bfs(i, j);
               /*     for (int ii=0; ii<N; ii++) {
                        for (int jj = 0; jj < M; jj++) {
                            System.out.print(knownPuddles[ii][jj]+" ");
                        }
                        System.out.println();
                    }
                    System.out.println();

                */
                }


            }
        }

        System.out.println(count);



    }

    static final int[][] dir = { { -1, 0 }, { 1, 0 }, { 0, -1 }, { 0, 1 }, {1, 1}, {1, -1}, {-1, 1}, {-1, -1}};
    static void bfs(int x, int y){
        Queue<point> q = new LinkedList<>();
        q.offer(new point(x, y));
        knownPuddles[x][y] = true;

        while (q.size()>0){
            point cur = q.poll();

            for (int i=0; i<8; i++){
                int nx = cur.x+dir[i][0];
                int ny = cur.y+dir[i][1];

                if (nx<0||nx>=N ||ny<0 || ny>=M) continue;

                if (rainData[nx][ny] && !knownPuddles[nx][ny]){
                    q.offer(new point(nx, ny));
                    knownPuddles[nx][ny] = true;
                }
            }
        }

    }

    static class point{
        int x, y;

        public point(int x, int y){
            this.x = x;
            this.y = y;
        }

    }
}
